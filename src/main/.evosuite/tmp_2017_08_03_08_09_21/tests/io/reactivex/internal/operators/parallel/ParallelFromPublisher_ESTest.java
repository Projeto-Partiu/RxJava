/*
 * This file was automatically generated by EvoSuite
 * Thu Aug 03 14:25:05 GMT 2017
 */

package io.reactivex.internal.operators.parallel;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.reactivex.functions.Action;
import io.reactivex.internal.operators.parallel.ParallelFromPublisher;
import java.lang.reflect.Array;
import java.util.Comparator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;
import org.reactivestreams.Publisher;
import org.reactivestreams.Subscriber;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParallelFromPublisher_ESTest extends ParallelFromPublisher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParallelFromPublisher<Object> parallelFromPublisher0 = new ParallelFromPublisher<Object>((Publisher<?>) null, 308, 1717986918);
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 2);
      Action action0 = mock(Action.class, new ViolatedAssumptionAnswer());
      parallelFromPublisher0.doAfterTerminated(action0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-250));
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 1717986918);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      // Undeclared exception!
      try { 
        parallelFromPublisher0.subscribe(subscriberArray0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.concurrent.atomic.AtomicReferenceArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParallelFromPublisher<Object> parallelFromPublisher0 = new ParallelFromPublisher<Object>((Publisher<?>) null, 3, 3);
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      parallelFromPublisher0.toSortedList(comparator0, 3);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      parallelFromPublisher0.subscribe(subscriberArray0);
      ParallelFromPublisher.ParallelDispatcher<Integer> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Integer>(subscriberArray0, 3);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher7.new RailSubscription(0, (-1));
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(3);
      Integer integer0 = new Integer(1527);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher6.onNext(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-4198));
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 1062);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 1197);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher0.new RailSubscription(0, 1062);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(539L);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher8 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, 0);
      parallelFromPublisher_ParallelDispatcher8.onSubscribe(parallelFromPublisher_ParallelDispatcher_RailSubscription0);
      parallelFromPublisher_ParallelDispatcher8.drainSync();
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher9 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray1, 0);
      parallelFromPublisher_ParallelDispatcher1.drainSync();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-4198));
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 6);
      subscriberArray1[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      subscriberArray1[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      subscriberArray1[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 0);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      Subscriber<Object>[] subscriberArray2 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 0);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 1062);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 1197);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher4.new RailSubscription(0, 1062);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(2L);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(539L);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher8 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray1, 0);
      parallelFromPublisher_ParallelDispatcher8.onSubscribe(parallelFromPublisher_ParallelDispatcher_RailSubscription0);
      parallelFromPublisher_ParallelDispatcher8.drainSync();
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher9 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 6);
      subscriberArray1[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 0);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      Subscriber<Object>[] subscriberArray2 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 0);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 1062);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 1197);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher4.new RailSubscription(0, 1062);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(539L);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher8 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray1, 0);
      parallelFromPublisher_ParallelDispatcher8.onSubscribe(parallelFromPublisher_ParallelDispatcher_RailSubscription0);
      parallelFromPublisher_ParallelDispatcher3.drainAsync();
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher9 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 1062);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher9.drainAsync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParallelFromPublisher<Object> parallelFromPublisher0 = new ParallelFromPublisher<Object>((Publisher<?>) null, 3, 3);
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher7;
      parallelFromPublisher0.subscribe(subscriberArray0);
      parallelFromPublisher_ParallelDispatcher7.drainSync();
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher8 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, 2);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher8.setupSubscribers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParallelFromPublisher<Integer> parallelFromPublisher0 = new ParallelFromPublisher<Integer>((Publisher<? extends Integer>) null, 32, 32);
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 4);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 32);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2745);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 32);
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      parallelFromPublisher0.subscribe(subscriberArray0);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, 3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParallelFromPublisher<String> parallelFromPublisher0 = new ParallelFromPublisher<String>((Publisher<? extends String>) null, 3256, 3256);
      parallelFromPublisher0.parallelism();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 1);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-1231));
      parallelFromPublisher_ParallelDispatcher0.cancel(1);
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 9);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, 6);
      parallelFromPublisher_ParallelDispatcher0.setupSubscribers();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 7);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 11);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 5);
      subscriberArray1[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 3313);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 11);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 11);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 3313);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3313);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      ParallelFromPublisher<String> parallelFromPublisher0 = new ParallelFromPublisher<String>((Publisher<? extends String>) null, 3313, 0);
      // Undeclared exception!
      try { 
        parallelFromPublisher0.subscribe((Subscriber<? super String>[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.parallel.ParallelFlowable", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParallelFromPublisher<String> parallelFromPublisher0 = new ParallelFromPublisher<String>((Publisher<? extends String>) null, (-1671), 0);
      parallelFromPublisher0.parallelism();
      ParallelFromPublisher<Object> parallelFromPublisher1 = new ParallelFromPublisher<Object>((Publisher<?>) null, 0, (-1671));
      parallelFromPublisher1.parallelism();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Integer> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Integer>(subscriberArray0, 5);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      Throwable throwable0 = parallelFromPublisher_ParallelDispatcher1.error;
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher0.onError((Throwable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-786));
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher0.drainAsync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher0.cancel((-1662));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // index -1662
         //
         verifyException("java.util.concurrent.atomic.AtomicLongArray", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-4198));
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 6);
      subscriberArray1[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      subscriberArray1[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 0);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      Subscriber<Object>[] subscriberArray2 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 0);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 1062);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 1197);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher7;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher8 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher5.new RailSubscription(0, 1062);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(539L);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher9 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray1, 0);
      parallelFromPublisher_ParallelDispatcher9.onSubscribe(parallelFromPublisher_ParallelDispatcher_RailSubscription0);
      parallelFromPublisher_ParallelDispatcher9.drainSync();
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher10 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray2, 0);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher10.onNext("\"eG");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-81));
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher0.new RailSubscription(1851, 0);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request((-81));
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request((-9223372036854775808L));
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, (-81));
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-81));
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher2.drain();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, 2);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher0.onComplete();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray0, 400);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher0.drainSync();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParallelFromPublisher<Object> parallelFromPublisher0 = new ParallelFromPublisher<Object>((Publisher<?>) null, 3, 3);
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 3);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 2);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      parallelFromPublisher0.subscribe(subscriberArray0);
      ParallelFromPublisher.ParallelDispatcher<Integer> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Integer>(subscriberArray0, 3);
      Integer integer0 = new Integer(1527);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher6.onNext(integer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Subscriber<Object>[] subscriberArray0 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 8);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher0 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher1 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher1;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher2 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, 0);
      subscriberArray0[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher3 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray0, (-4198));
      subscriberArray0[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      Subscriber<Object>[] subscriberArray1 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 6);
      subscriberArray1[0] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher3;
      subscriberArray1[1] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[2] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      subscriberArray1[3] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher2;
      subscriberArray1[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher0;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher4 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 0);
      subscriberArray0[4] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher4;
      Subscriber<Object>[] subscriberArray2 = (Subscriber<Object>[]) Array.newInstance(Subscriber.class, 0);
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher5 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 0);
      subscriberArray0[5] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher5;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher6 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray2, 1062);
      subscriberArray0[6] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher6;
      ParallelFromPublisher.ParallelDispatcher<Object> parallelFromPublisher_ParallelDispatcher7 = new ParallelFromPublisher.ParallelDispatcher<Object>(subscriberArray1, 1197);
      subscriberArray0[7] = (Subscriber<Object>) parallelFromPublisher_ParallelDispatcher7;
      ParallelFromPublisher.ParallelDispatcher.RailSubscription parallelFromPublisher_ParallelDispatcher_RailSubscription0 = parallelFromPublisher_ParallelDispatcher5.new RailSubscription(0, 1062);
      parallelFromPublisher_ParallelDispatcher_RailSubscription0.request(539L);
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher8 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray1, 0);
      parallelFromPublisher_ParallelDispatcher8.onSubscribe(parallelFromPublisher_ParallelDispatcher_RailSubscription0);
      parallelFromPublisher_ParallelDispatcher8.drainSync();
      ParallelFromPublisher.ParallelDispatcher<String> parallelFromPublisher_ParallelDispatcher9 = new ParallelFromPublisher.ParallelDispatcher<String>(subscriberArray2, 0);
      // Undeclared exception!
      try { 
        parallelFromPublisher_ParallelDispatcher9.onNext("\"eG");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("io.reactivex.internal.operators.parallel.ParallelFromPublisher$ParallelDispatcher", e);
      }
  }
}
