/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Aug 03 14:45:08 GMT 2017
 */

package io.reactivex.internal.operators.observable;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class ObservableInternalHelper_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.reactivex.internal.operators.observable.ObservableInternalHelper"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "America/Fortaleza"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader() ,
      "io.reactivex.functions.BiFunction",
      "io.reactivex.internal.operators.observable.ObservableBufferBoundary",
      "io.reactivex.internal.fuseable.ScalarCallable",
      "io.reactivex.internal.operators.observable.ObservableWithLatestFrom",
      "io.reactivex.internal.operators.single.SingleToFlowable",
      "io.reactivex.internal.operators.maybe.MaybeAmb",
      "io.reactivex.internal.operators.single.SingleFlatMap",
      "io.reactivex.internal.operators.flowable.FlowableWindow",
      "io.reactivex.internal.operators.observable.ObservableGenerate",
      "io.reactivex.internal.operators.single.SingleFromCallable",
      "io.reactivex.internal.operators.single.SingleJust",
      "io.reactivex.internal.operators.single.SingleToObservable",
      "io.reactivex.internal.operators.single.SingleError",
      "io.reactivex.internal.operators.observable.ObservableFlatMapSingle",
      "io.reactivex.internal.operators.observable.ObservableLastSingle",
      "io.reactivex.internal.operators.observable.ObservableSkip",
      "io.reactivex.internal.operators.single.SingleFlatMapMaybe",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ZipIterableFunction",
      "io.reactivex.Notification",
      "io.reactivex.internal.operators.observable.ObservableSkipUntil",
      "io.reactivex.internal.schedulers.SchedulerWhen",
      "io.reactivex.internal.operators.single.SingleOnErrorReturn",
      "io.reactivex.internal.operators.single.SingleTimeout",
      "io.reactivex.internal.operators.single.SingleLift",
      "io.reactivex.internal.fuseable.HasUpstreamPublisher",
      "io.reactivex.ObservableTransformer",
      "io.reactivex.internal.operators.completable.CompletableTimer",
      "io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream",
      "io.reactivex.internal.operators.single.SingleEquals",
      "io.reactivex.internal.operators.observable.ObservableFlatMapCompletableCompletable",
      "io.reactivex.internal.operators.single.SingleFromUnsafeSource",
      "io.reactivex.internal.operators.observable.ObservableTimer",
      "io.reactivex.internal.operators.observable.ObservableWindowBoundarySupplier",
      "io.reactivex.internal.operators.observable.ObservableSwitchMap",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayCallable",
      "io.reactivex.internal.operators.observable.ObservableGroupBy",
      "io.reactivex.internal.operators.observable.ObservableGroupJoin",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapIntoIterable",
      "io.reactivex.functions.BiConsumer",
      "io.reactivex.internal.operators.observable.ObservableSwitchIfEmpty",
      "io.reactivex.Maybe",
      "io.reactivex.internal.operators.observable.ObservableOnErrorReturn",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ErrorMapperFilter",
      "io.reactivex.internal.operators.observable.ObservableWithLatestFromMany",
      "io.reactivex.internal.operators.observable.ObservableReduceSeedSingle",
      "io.reactivex.internal.operators.single.SingleDelayWithSingle",
      "io.reactivex.Observable",
      "io.reactivex.internal.operators.single.SingleHide",
      "io.reactivex.internal.operators.observable.ObservableCountSingle",
      "io.reactivex.internal.operators.single.SingleUsing",
      "io.reactivex.internal.operators.observable.ObservableScanSeed",
      "io.reactivex.internal.operators.single.SingleCache",
      "io.reactivex.functions.Predicate",
      "io.reactivex.internal.operators.observable.ObservableWindowTimed",
      "io.reactivex.internal.operators.observable.ObservableDebounce",
      "io.reactivex.SingleObserver",
      "io.reactivex.internal.operators.observable.ObservableFlatMap",
      "io.reactivex.internal.operators.single.SingleDelay",
      "io.reactivex.internal.operators.observable.ObservableCombineLatest",
      "io.reactivex.internal.operators.observable.ObservableWindowBoundarySelector",
      "io.reactivex.internal.operators.observable.ObservableFilter",
      "io.reactivex.internal.operators.single.SingleDoOnSubscribe",
      "io.reactivex.MaybeObserver",
      "io.reactivex.internal.fuseable.HasUpstreamSingleSource",
      "io.reactivex.SingleSource",
      "io.reactivex.internal.operators.observable.ObservableJust",
      "io.reactivex.internal.operators.single.SingleDoAfterTerminate",
      "io.reactivex.internal.operators.observable.ObservableLastMaybe",
      "io.reactivex.internal.operators.flowable.FlowableSingleSingle",
      "io.reactivex.internal.operators.single.SingleTimer",
      "io.reactivex.internal.operators.observable.ObservableReplay",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerInner",
      "io.reactivex.internal.operators.observable.ObservableCreate",
      "io.reactivex.internal.operators.single.SingleContains",
      "io.reactivex.internal.operators.flowable.FlowableOnBackpressureError",
      "io.reactivex.internal.operators.observable.ObservableBufferExactBoundary",
      "io.reactivex.internal.fuseable.HasUpstreamObservableSource",
      "io.reactivex.ObservableEmitter",
      "io.reactivex.internal.operators.observable.ObservableTakeUntil",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedReplayCallable",
      "io.reactivex.internal.operators.observable.ObservableSingleMaybe",
      "io.reactivex.internal.operators.single.SingleFromPublisher",
      "io.reactivex.internal.operators.single.SingleFlatMapIterableObservable",
      "io.reactivex.internal.fuseable.HasUpstreamMaybeSource",
      "io.reactivex.disposables.Disposable",
      "io.reactivex.internal.operators.observable.ObservableConcatMapEager",
      "io.reactivex.internal.operators.maybe.MaybeDelay",
      "io.reactivex.internal.operators.observable.ObservableFromArray",
      "io.reactivex.internal.operators.single.SingleDelayWithPublisher",
      "io.reactivex.internal.operators.observable.ObservableElementAtSingle",
      "io.reactivex.internal.operators.flowable.FlowableFlatMapPublisher",
      "io.reactivex.internal.operators.observable.ObservableAnySingle",
      "io.reactivex.internal.operators.observable.ObservableRange",
      "io.reactivex.internal.operators.observable.ObservableRepeat",
      "io.reactivex.internal.operators.observable.ObservableTimeoutTimed",
      "io.reactivex.internal.operators.observable.ObservableRepeatUntil",
      "io.reactivex.observers.BaseTestConsumer",
      "io.reactivex.Single",
      "io.reactivex.internal.operators.observable.ObservableReplay$BufferSupplier",
      "io.reactivex.internal.operators.observable.ObservableSampleWithObservable",
      "io.reactivex.internal.operators.observable.ObservableError",
      "io.reactivex.internal.operators.observable.ObservableBuffer",
      "io.reactivex.internal.operators.single.SingleZipIterable",
      "io.reactivex.internal.operators.observable.ObservableSingleSingle",
      "io.reactivex.internal.operators.observable.ObservableHide",
      "io.reactivex.internal.operators.observable.ObservableRetryPredicate",
      "io.reactivex.ObservableSource",
      "io.reactivex.internal.operators.observable.ObservableDistinct",
      "org.reactivestreams.Subscriber",
      "io.reactivex.internal.operators.single.SingleDoOnSuccess",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ItemDelayFunction",
      "io.reactivex.internal.operators.observable.ObservableLift",
      "io.reactivex.internal.operators.observable.ObservableRepeatWhen",
      "io.reactivex.internal.operators.single.SingleAmb",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleBiGenerator",
      "io.reactivex.internal.operators.observable.ObservableFromFuture",
      "io.reactivex.functions.Consumer",
      "io.reactivex.internal.operators.single.SingleZipArray",
      "io.reactivex.internal.operators.single.SingleCreate",
      "io.reactivex.internal.operators.observable.ObservableDematerialize",
      "io.reactivex.internal.operators.observable.ObservableReplay$Replay",
      "io.reactivex.internal.operators.observable.ObservableConcatMap",
      "io.reactivex.internal.operators.observable.ObservableFromCallable",
      "io.reactivex.functions.Function",
      "io.reactivex.internal.operators.observable.ObservableFlattenIterable",
      "io.reactivex.internal.operators.observable.ObservableDistinctUntilChanged",
      "io.reactivex.internal.operators.observable.ObservableCollectSingle",
      "io.reactivex.internal.operators.observable.ObservableDoFinally",
      "io.reactivex.internal.operators.observable.ObservableJoin",
      "io.reactivex.internal.operators.observable.ObservableDetach",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$TimedReplayCallable",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper",
      "io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther",
      "io.reactivex.internal.operators.observable.ObservableBufferTimed",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnComplete",
      "io.reactivex.ObservableOnSubscribe",
      "io.reactivex.Completable",
      "io.reactivex.internal.operators.observable.ObservableObserveOn",
      "io.reactivex.internal.operators.observable.ObservableIgnoreElements",
      "io.reactivex.internal.operators.observable.ObservableFromPublisher",
      "io.reactivex.internal.operators.observable.ObservableTakeWhile",
      "io.reactivex.internal.operators.observable.ObservableTake",
      "io.reactivex.internal.operators.observable.ObservableSubscribeOn",
      "io.reactivex.internal.fuseable.FuseToObservable",
      "io.reactivex.internal.operators.observable.ObservableScan",
      "io.reactivex.internal.operators.single.SingleDelayWithCompletable",
      "io.reactivex.internal.operators.observable.ObservableToListSingle",
      "io.reactivex.internal.operators.single.SingleUnsubscribeOn",
      "io.reactivex.CompletableObserver",
      "io.reactivex.internal.operators.observable.ObservableAmb",
      "io.reactivex.internal.operators.observable.ObservableDoOnLifecycle",
      "io.reactivex.internal.operators.observable.ObservableRetryWhen",
      "io.reactivex.internal.operators.single.SingleDoAfterSuccess",
      "io.reactivex.CompletableSource",
      "io.reactivex.internal.operators.observable.ObservableFromUnsafeSource",
      "io.reactivex.MaybeSource",
      "io.reactivex.internal.operators.single.SingleDoOnEvent",
      "io.reactivex.internal.operators.single.SingleMap",
      "io.reactivex.internal.operators.observable.ObservableInterval",
      "io.reactivex.internal.operators.observable.ObservableDelay",
      "io.reactivex.internal.operators.observable.ObservableSequenceEqualSingle",
      "io.reactivex.internal.operators.observable.ObservableUnsubscribeOn",
      "io.reactivex.internal.operators.observable.ObservableRangeLong",
      "io.reactivex.internal.operators.observable.AbstractObservableWithUpstream",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$SimpleGenerator",
      "io.reactivex.internal.operators.observable.ObservableMap",
      "io.reactivex.internal.operators.single.SingleTakeUntil",
      "io.reactivex.internal.operators.observable.ObservableGroupJoin$JoinSupport",
      "io.reactivex.Flowable",
      "io.reactivex.internal.operators.observable.ObservableElementAtMaybe",
      "io.reactivex.internal.operators.observable.ObservableDoOnEach",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$RetryWhenInner",
      "io.reactivex.internal.operators.observable.ObservableIntervalRange",
      "io.reactivex.BackpressureStrategy",
      "io.reactivex.internal.operators.observable.ObservableIgnoreElementsCompletable",
      "io.reactivex.internal.operators.observable.ObservableTakeUntilPredicate",
      "org.reactivestreams.Publisher",
      "io.reactivex.internal.operators.single.SingleResumeNext",
      "io.reactivex.internal.operators.flowable.FlowableConcatMapPublisher",
      "io.reactivex.internal.operators.flowable.FlowableWindowBoundary",
      "io.reactivex.internal.operators.observable.ObservableUsing",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$BufferedTimedReplayCallable",
      "io.reactivex.internal.operators.observable.ObservableDefer",
      "io.reactivex.internal.operators.observable.ObservableFromIterable",
      "io.reactivex.internal.fuseable.FuseToFlowable",
      "io.reactivex.Observer",
      "io.reactivex.internal.operators.observable.ObservableSkipLast",
      "io.reactivex.internal.operators.maybe.MaybeFromSingle",
      "io.reactivex.functions.BiPredicate",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt",
      "io.reactivex.internal.operators.observable.ObservableZip",
      "io.reactivex.internal.operators.single.SingleDefer",
      "io.reactivex.internal.operators.single.SingleFlatMapCompletable",
      "io.reactivex.internal.operators.maybe.MaybeDelayOtherPublisher",
      "io.reactivex.internal.operators.observable.ObservableTakeLastTimed",
      "io.reactivex.internal.operators.observable.ObservablePublishSelector",
      "io.reactivex.internal.operators.observable.ObservableFlatMapMaybe",
      "io.reactivex.internal.operators.observable.ObservableSampleTimed",
      "io.reactivex.internal.operators.observable.ObservableTimeInterval",
      "io.reactivex.internal.operators.observable.ObservableTakeLastOne",
      "io.reactivex.internal.operators.observable.ObservableSkipWhile",
      "io.reactivex.internal.operators.single.SingleFlatMapIterableFlowable",
      "io.reactivex.observers.TestObserver",
      "io.reactivex.internal.operators.single.SingleDoOnError",
      "io.reactivex.internal.operators.observable.ObservableWindowBoundary",
      "io.reactivex.internal.operators.observable.ObservableOnErrorNext",
      "io.reactivex.internal.operators.observable.ObservableSerialized",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnError",
      "io.reactivex.internal.operators.observable.ObservableTakeLast",
      "io.reactivex.internal.operators.observable.ObservableRefCount",
      "io.reactivex.internal.operators.observable.ObservableAllSingle",
      "io.reactivex.exceptions.CompositeException",
      "io.reactivex.internal.operators.observable.ObservableReplay$MulticastReplay",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$RepeatWhenOuterHandler",
      "io.reactivex.functions.BooleanSupplier",
      "io.reactivex.internal.operators.observable.ObservableReduceMaybe",
      "io.reactivex.internal.operators.maybe.MaybeTimer",
      "io.reactivex.Scheduler",
      "io.reactivex.internal.operators.observable.ObservableDoAfterNext",
      "io.reactivex.internal.operators.observable.ObservableSkipLastTimed",
      "io.reactivex.internal.operators.observable.ObservableTimeout",
      "io.reactivex.internal.operators.flowable.FlowableFromObservable",
      "io.reactivex.internal.operators.flowable.FlowableConcatMap",
      "io.reactivex.internal.operators.single.SingleDoFinally",
      "io.reactivex.internal.operators.maybe.MaybeFilterSingle",
      "io.reactivex.internal.operators.completable.CompletableFromSingle",
      "io.reactivex.observables.ConnectableObservable",
      "io.reactivex.internal.operators.single.SingleObserveOn",
      "io.reactivex.internal.operators.single.SingleSubscribeOn",
      "io.reactivex.functions.Action",
      "io.reactivex.internal.operators.observable.ObservableDebounceTimed",
      "io.reactivex.internal.operators.observable.ObservableReduceWithSingle",
      "io.reactivex.internal.operators.observable.ObservableThrottleFirstTimed",
      "io.reactivex.functions.Function3",
      "io.reactivex.ObservableOperator",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$FlatMapWithCombinerOuter",
      "io.reactivex.functions.Function5",
      "io.reactivex.functions.Function4",
      "io.reactivex.functions.Function7",
      "io.reactivex.functions.Function6",
      "io.reactivex.internal.operators.observable.ObservableAutoConnect",
      "io.reactivex.functions.Function9",
      "io.reactivex.functions.Function8",
      "io.reactivex.Emitter",
      "io.reactivex.internal.operators.observable.ObservableWindow",
      "io.reactivex.internal.operators.observable.ObservableMaterialize",
      "io.reactivex.internal.operators.observable.ObservableBufferBoundarySupplier",
      "io.reactivex.internal.operators.completable.CompletableDelay",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ReplayFunction",
      "io.reactivex.internal.operators.single.SingleDoOnDispose",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObservableMapper",
      "io.reactivex.internal.operators.observable.ObservablePublishSelector$TargetObserver",
      "io.reactivex.internal.operators.flowable.FlowableWindowTimed",
      "io.reactivex.internal.operators.observable.ObservableRetryBiPredicate",
      "io.reactivex.internal.operators.single.SingleDelayWithObservable",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ObserverOnNext",
      "io.reactivex.internal.operators.maybe.AbstractMaybeWithUpstream",
      "io.reactivex.internal.operators.observable.ObservableZipIterable"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("io.reactivex.Emitter", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.Observer", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.functions.BiConsumer", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.functions.BiFunction", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.sql.BatchUpdateException", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.sql.SQLSyntaxErrorException", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.sql.SQLTimeoutException", false, ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(ObservableInternalHelper_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$ErrorMapperFilter",
      "io.reactivex.internal.operators.observable.ObservableInternalHelper$MapToInt"
    );
  }
}
