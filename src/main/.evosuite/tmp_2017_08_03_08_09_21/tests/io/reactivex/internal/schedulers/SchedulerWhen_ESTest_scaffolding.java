/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Aug 03 14:51:27 GMT 2017
 */

package io.reactivex.internal.schedulers;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class SchedulerWhen_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "io.reactivex.internal.schedulers.SchedulerWhen"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "America/Fortaleza"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SchedulerWhen_ESTest_scaffolding.class.getClassLoader() ,
      "io.reactivex.functions.BiFunction",
      "io.reactivex.internal.operators.flowable.FlowableIgnoreElementsCompletable",
      "io.reactivex.internal.fuseable.ScalarCallable",
      "io.reactivex.internal.operators.flowable.FlowableWindow",
      "io.reactivex.exceptions.UndeliverableException",
      "io.reactivex.internal.operators.flowable.FlowableIntervalRange",
      "io.reactivex.FlowableTransformer",
      "io.reactivex.internal.operators.completable.CompletableTimeout",
      "io.reactivex.internal.operators.completable.CompletableHide",
      "io.reactivex.functions.LongConsumer",
      "io.reactivex.Scheduler$Worker",
      "io.reactivex.internal.schedulers.SchedulerWhen",
      "io.reactivex.internal.operators.flowable.FlowableDebounce",
      "io.reactivex.internal.operators.flowable.FlowableSubscribeOn",
      "io.reactivex.internal.operators.flowable.FlowableAmb",
      "io.reactivex.internal.operators.flowable.FlowableWithLatestFrom",
      "io.reactivex.internal.operators.flowable.FlowableBufferBoundary",
      "io.reactivex.internal.operators.flowable.FlowableObserveOn",
      "io.reactivex.internal.fuseable.QueueDisposable",
      "io.reactivex.internal.operators.flowable.FlowableOnBackpressureLatest",
      "io.reactivex.internal.operators.flowable.FlowableDebounceTimed",
      "io.reactivex.internal.operators.flowable.FlowableHide",
      "io.reactivex.FlowableSubscriber",
      "io.reactivex.internal.fuseable.HasUpstreamPublisher",
      "io.reactivex.internal.disposables.EmptyDisposable",
      "io.reactivex.internal.operators.completable.CompletableTimer",
      "io.reactivex.internal.operators.flowable.AbstractFlowableWithUpstream",
      "io.reactivex.internal.operators.flowable.FlowableConcatArray",
      "io.reactivex.internal.operators.flowable.FlowableRange",
      "io.reactivex.internal.operators.completable.CompletablePeek",
      "io.reactivex.internal.operators.flowable.FlowableTakeWhile",
      "io.reactivex.internal.operators.completable.CompletableConcat",
      "io.reactivex.internal.operators.flowable.FlowableFlatMapCompletableCompletable",
      "io.reactivex.internal.operators.flowable.FlowableBufferExactBoundary",
      "io.reactivex.internal.functions.Functions$NaturalObjectComparator",
      "io.reactivex.internal.operators.flowable.FlowableSequenceEqualSingle",
      "io.reactivex.internal.operators.flowable.FlowableTimeoutTimed",
      "io.reactivex.Scheduler$PeriodicDirectTask",
      "io.reactivex.internal.operators.flowable.FlowableDetach",
      "io.reactivex.internal.functions.Functions$EmptyLongConsumer",
      "io.reactivex.internal.operators.completable.CompletableLift",
      "io.reactivex.internal.operators.flowable.FlowableDematerialize",
      "io.reactivex.processors.SerializedProcessor",
      "io.reactivex.functions.BiConsumer",
      "io.reactivex.Maybe",
      "io.reactivex.internal.operators.flowable.FlowableLift",
      "io.reactivex.internal.operators.flowable.FlowableDistinct",
      "io.reactivex.internal.operators.flowable.FlowableUnsubscribeOn",
      "io.reactivex.internal.operators.completable.CompletableFromCallable",
      "io.reactivex.internal.operators.flowable.FlowableAnySingle",
      "io.reactivex.internal.operators.flowable.FlowableJoin",
      "io.reactivex.Observable",
      "io.reactivex.internal.operators.completable.CompletableNever",
      "io.reactivex.internal.functions.ObjectHelper",
      "io.reactivex.exceptions.MissingBackpressureException",
      "io.reactivex.internal.operators.completable.CompletableOnErrorComplete",
      "io.reactivex.internal.operators.flowable.FlowableTakeLast",
      "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySelector",
      "io.reactivex.internal.util.Pow2",
      "io.reactivex.internal.operators.flowable.FlowableJust",
      "io.reactivex.internal.operators.flowable.FlowableFlattenIterable",
      "io.reactivex.internal.operators.completable.CompletableObserveOn",
      "io.reactivex.internal.operators.completable.CompletableFromRunnable",
      "io.reactivex.functions.Predicate",
      "io.reactivex.observers.TestObserver$EmptyObserver",
      "io.reactivex.internal.disposables.SequentialDisposable",
      "io.reactivex.internal.operators.flowable.FlowableSampleTimed",
      "io.reactivex.internal.operators.flowable.FlowableBufferTimed",
      "io.reactivex.SingleObserver",
      "io.reactivex.internal.operators.completable.CompletableToObservable",
      "io.reactivex.internal.operators.flowable.FlowableReduceWithSingle",
      "io.reactivex.internal.operators.flowable.FlowableRangeLong",
      "io.reactivex.internal.operators.flowable.FlowableRepeat",
      "io.reactivex.MaybeObserver",
      "io.reactivex.SingleSource",
      "io.reactivex.internal.operators.flowable.FlowableSingleSingle",
      "io.reactivex.internal.operators.flowable.FlowableGenerate",
      "io.reactivex.internal.operators.maybe.MaybeDelayWithCompletable",
      "io.reactivex.internal.operators.flowable.FlowableDoAfterNext",
      "io.reactivex.internal.operators.flowable.FlowableBuffer",
      "io.reactivex.internal.operators.completable.CompletableConcatIterable",
      "io.reactivex.internal.operators.flowable.FlowableCollectSingle",
      "io.reactivex.internal.operators.flowable.FlowableOnErrorNext",
      "io.reactivex.internal.operators.flowable.FlowableZipIterable",
      "io.reactivex.internal.schedulers.NewThreadScheduler",
      "io.reactivex.internal.operators.flowable.FlowableConcatMapEager",
      "io.reactivex.CompletableEmitter",
      "io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction",
      "io.reactivex.internal.operators.completable.CompletableError",
      "io.reactivex.internal.operators.flowable.FlowableReduceMaybe",
      "io.reactivex.internal.operators.flowable.FlowableRepeatWhen",
      "io.reactivex.internal.functions.Functions$FutureAction",
      "io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray",
      "io.reactivex.internal.operators.flowable.FlowableFromFuture",
      "io.reactivex.Scheduler$DisposeTask",
      "io.reactivex.plugins.RxJavaPlugins",
      "io.reactivex.internal.operators.flowable.FlowableScanSeed",
      "io.reactivex.internal.operators.flowable.FlowableSkipWhile",
      "io.reactivex.disposables.Disposable",
      "io.reactivex.internal.fuseable.HasUpstreamCompletableSource",
      "io.reactivex.internal.operators.completable.CompletableMerge",
      "io.reactivex.internal.functions.Functions$EmptyAction",
      "io.reactivex.internal.operators.flowable.FlowableAllSingle",
      "io.reactivex.internal.schedulers.SingleScheduler",
      "io.reactivex.internal.operators.flowable.FlowableDefer",
      "io.reactivex.internal.operators.flowable.FlowableFromCallable",
      "io.reactivex.internal.operators.completable.CompletableCreate",
      "io.reactivex.flowables.ConnectableFlowable",
      "io.reactivex.observers.BaseTestConsumer",
      "io.reactivex.Single",
      "io.reactivex.internal.operators.completable.CompletableToSingle",
      "io.reactivex.internal.operators.flowable.FlowableDistinctUntilChanged",
      "io.reactivex.internal.operators.flowable.FlowableOnBackpressureDrop",
      "io.reactivex.CompletableOperator",
      "io.reactivex.ObservableSource",
      "org.reactivestreams.Subscriber",
      "io.reactivex.internal.functions.Functions$Identity",
      "io.reactivex.internal.operators.completable.CompletableFromPublisher",
      "io.reactivex.internal.operators.flowable.FlowableFlatMapSingle",
      "io.reactivex.internal.operators.flowable.FlowableConcatMapEagerPublisher",
      "io.reactivex.internal.operators.flowable.FlowableRetryPredicate",
      "io.reactivex.internal.operators.flowable.FlowableSamplePublisher",
      "io.reactivex.internal.operators.flowable.FlowableSwitchIfEmpty",
      "io.reactivex.internal.operators.flowable.FlowableFlatMap",
      "io.reactivex.internal.operators.completable.CompletableFromAction",
      "io.reactivex.internal.operators.flowable.FlowableDoOnEach",
      "io.reactivex.internal.operators.flowable.FlowableDoOnLifecycle",
      "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBuffer",
      "io.reactivex.functions.Consumer",
      "io.reactivex.internal.operators.flowable.FlowableTakeLastOne",
      "io.reactivex.internal.operators.flowable.FlowableGroupBy",
      "io.reactivex.internal.operators.flowable.FlowableTakeUntilPredicate",
      "io.reactivex.functions.Function",
      "io.reactivex.internal.operators.flowable.FlowableCreate",
      "org.reactivestreams.Subscription",
      "io.reactivex.internal.schedulers.SchedulerWhen$SubscribedDisposable",
      "io.reactivex.internal.operators.completable.CompletableResumeNext",
      "io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction",
      "io.reactivex.internal.operators.flowable.FlowableSkip",
      "io.reactivex.internal.operators.flowable.FlowableWithLatestFromMany",
      "io.reactivex.internal.operators.completable.CompletableConcatArray",
      "io.reactivex.internal.operators.observable.ObservableDelaySubscriptionOther",
      "io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription",
      "io.reactivex.internal.queue.SpscLinkedArrayQueue",
      "org.reactivestreams.Processor",
      "io.reactivex.Completable",
      "io.reactivex.processors.FlowableProcessor",
      "io.reactivex.internal.util.ExceptionHelper",
      "io.reactivex.internal.operators.observable.ObservableFromPublisher",
      "io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction",
      "io.reactivex.disposables.Disposables",
      "io.reactivex.internal.operators.flowable.FlowableSkipUntil",
      "io.reactivex.internal.operators.single.SingleDelayWithCompletable",
      "io.reactivex.internal.operators.completable.CompletableFromUnsafeSource",
      "io.reactivex.internal.operators.flowable.FlowableElementAtMaybe",
      "io.reactivex.internal.util.VolatileSizeArrayList",
      "io.reactivex.internal.operators.flowable.FlowableCache",
      "io.reactivex.CompletableObserver",
      "io.reactivex.internal.operators.flowable.FlowableDoFinally",
      "io.reactivex.internal.functions.Functions",
      "io.reactivex.internal.functions.Functions$TruePredicate",
      "io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction",
      "io.reactivex.internal.operators.flowable.FlowableOnErrorReturn",
      "io.reactivex.internal.operators.flowable.FlowableTimeout",
      "io.reactivex.internal.operators.flowable.FlowableDelay",
      "io.reactivex.CompletableSource",
      "io.reactivex.MaybeSource",
      "io.reactivex.internal.operators.flowable.FlowableDelaySubscriptionOther",
      "io.reactivex.internal.functions.Functions$EmptyConsumer",
      "io.reactivex.internal.schedulers.IoScheduler",
      "io.reactivex.internal.operators.flowable.FlowableUsing",
      "io.reactivex.internal.schedulers.ComputationScheduler",
      "io.reactivex.internal.operators.flowable.FlowableFromIterable",
      "io.reactivex.internal.schedulers.SchedulerWhen$CreateWorkerFunction$WorkerCompletable",
      "io.reactivex.internal.operators.flowable.FlowableZip",
      "io.reactivex.internal.operators.flowable.FlowableThrottleFirstTimed",
      "io.reactivex.disposables.RunnableDisposable",
      "io.reactivex.internal.functions.Functions$EmptyRunnable",
      "io.reactivex.internal.operators.flowable.FlowableMaterialize",
      "io.reactivex.internal.operators.flowable.FlowableTimeInterval",
      "io.reactivex.internal.operators.completable.CompletableSubscribeOn",
      "io.reactivex.internal.operators.completable.CompletableCreate$Emitter",
      "io.reactivex.Flowable",
      "io.reactivex.internal.operators.completable.CompletableDoOnEvent",
      "io.reactivex.internal.operators.completable.CompletableDisposeOn",
      "io.reactivex.CompletableOnSubscribe",
      "io.reactivex.BackpressureStrategy",
      "io.reactivex.processors.UnicastProcessor",
      "io.reactivex.internal.fuseable.QueueFuseable",
      "io.reactivex.internal.operators.completable.CompletableDoFinally",
      "org.reactivestreams.Publisher",
      "io.reactivex.exceptions.Exceptions",
      "io.reactivex.internal.disposables.DisposableHelper",
      "io.reactivex.internal.subscriptions.BasicIntQueueSubscription",
      "io.reactivex.BackpressureOverflowStrategy",
      "io.reactivex.internal.operators.flowable.FlowableWindowBoundary",
      "io.reactivex.internal.operators.flowable.FlowableIgnoreElements",
      "io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate",
      "io.reactivex.FlowableOnSubscribe",
      "io.reactivex.internal.fuseable.QueueSubscription",
      "io.reactivex.internal.operators.completable.CompletableMergeIterable",
      "io.reactivex.internal.fuseable.FuseToFlowable",
      "io.reactivex.internal.functions.Functions$OnErrorMissingConsumer",
      "io.reactivex.internal.fuseable.SimpleQueue",
      "io.reactivex.Observer",
      "io.reactivex.internal.operators.flowable.FlowablePublishMulticast",
      "io.reactivex.internal.operators.flowable.FlowableRepeatUntil",
      "io.reactivex.internal.operators.flowable.FlowableSerialized",
      "io.reactivex.internal.functions.Functions$NullCallable",
      "io.reactivex.internal.operators.flowable.FlowableSingleMaybe",
      "io.reactivex.functions.BiPredicate",
      "io.reactivex.internal.operators.flowable.FlowableMap",
      "io.reactivex.internal.operators.flowable.FlowableFilter",
      "io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle",
      "io.reactivex.internal.operators.flowable.FlowableTakeUntil",
      "io.reactivex.parallel.ParallelFlowable",
      "io.reactivex.internal.operators.completable.CompletableToFlowable",
      "io.reactivex.internal.operators.flowable.FlowableLastSingle",
      "io.reactivex.internal.operators.flowable.FlowableLastMaybe",
      "io.reactivex.internal.fuseable.SimplePlainQueue",
      "io.reactivex.internal.operators.flowable.FlowableFlatMapMaybe",
      "io.reactivex.FlowableOperator",
      "io.reactivex.internal.operators.flowable.FlowableFromPublisher",
      "io.reactivex.internal.operators.flowable.FlowableElementAtSingle",
      "io.reactivex.observers.TestObserver",
      "io.reactivex.internal.operators.completable.CompletableErrorSupplier",
      "io.reactivex.internal.observers.EmptyCompletableObserver",
      "io.reactivex.internal.operators.completable.CompletableAmb",
      "io.reactivex.CompletableTransformer",
      "io.reactivex.internal.schedulers.SchedulerWhen$OnCompletedAction",
      "io.reactivex.internal.operators.flowable.FlowableWindowBoundarySupplier",
      "io.reactivex.internal.util.ExceptionHelper$Termination",
      "io.reactivex.internal.operators.maybe.MaybeFromCompletable",
      "io.reactivex.internal.operators.completable.CompletableCache",
      "io.reactivex.internal.operators.flowable.FlowableSwitchMap",
      "io.reactivex.exceptions.CompositeException",
      "io.reactivex.internal.operators.completable.CompletableMergeArray",
      "io.reactivex.internal.operators.flowable.FlowableCountSingle",
      "io.reactivex.internal.operators.flowable.FlowableCombineLatest",
      "io.reactivex.internal.operators.flowable.FlowableToListSingle",
      "io.reactivex.internal.operators.flowable.FlowableFromArray",
      "io.reactivex.internal.operators.flowable.FlowableSkipLast",
      "io.reactivex.internal.operators.flowable.FlowableSkipLastTimed",
      "io.reactivex.functions.BooleanSupplier",
      "io.reactivex.internal.schedulers.SchedulerWhen$QueueWorker",
      "io.reactivex.internal.operators.flowable.FlowableTimer",
      "io.reactivex.internal.operators.flowable.FlowableOnBackpressureBufferStrategy",
      "io.reactivex.Scheduler",
      "io.reactivex.internal.functions.Functions$MaxRequestSubscription",
      "io.reactivex.internal.operators.flowable.FlowableGroupJoin",
      "io.reactivex.internal.operators.completable.CompletableFromObservable",
      "io.reactivex.internal.functions.Functions$FalsePredicate",
      "io.reactivex.subscribers.TestSubscriber",
      "io.reactivex.internal.operators.flowable.FlowableError",
      "io.reactivex.internal.operators.flowable.FlowableConcatMap",
      "io.reactivex.internal.operators.completable.CompletableFromSingle",
      "io.reactivex.internal.operators.completable.CompletableDefer",
      "io.reactivex.internal.functions.ObjectHelper$BiObjectPredicate",
      "io.reactivex.internal.functions.Functions$ErrorConsumer",
      "io.reactivex.disposables.ReferenceDisposable",
      "io.reactivex.functions.Action",
      "io.reactivex.functions.Function3",
      "io.reactivex.exceptions.ProtocolViolationException",
      "io.reactivex.internal.operators.flowable.FlowableRetryWhen",
      "io.reactivex.functions.Function5",
      "io.reactivex.functions.Function4",
      "io.reactivex.functions.Function7",
      "io.reactivex.functions.Function6",
      "io.reactivex.exceptions.OnErrorNotImplementedException",
      "io.reactivex.functions.Function9",
      "io.reactivex.functions.Function8",
      "io.reactivex.internal.operators.flowable.FlowableTakeLastTimed",
      "io.reactivex.internal.operators.flowable.FlowableTake",
      "io.reactivex.internal.operators.completable.CompletableDelay",
      "io.reactivex.internal.operators.flowable.FlowableBufferBoundarySupplier",
      "io.reactivex.Scheduler$Worker$PeriodicTask",
      "io.reactivex.internal.operators.completable.CompletableMergeDelayErrorIterable",
      "io.reactivex.internal.operators.flowable.FlowableWindowTimed",
      "io.reactivex.internal.operators.flowable.FlowableScan",
      "io.reactivex.internal.operators.completable.CompletableUsing",
      "io.reactivex.internal.operators.flowable.FlowableInterval"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("io.reactivex.CompletableOnSubscribe", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.Scheduler", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.Scheduler$Worker", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.functions.Function", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("io.reactivex.processors.FlowableProcessor", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.lang.Iterable", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.lang.Runnable", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.concurrent.Future", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("java.util.function.UnaryOperator", false, SchedulerWhen_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SchedulerWhen_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "io.reactivex.Scheduler",
      "io.reactivex.internal.disposables.EmptyDisposable",
      "io.reactivex.internal.schedulers.SchedulerWhen",
      "io.reactivex.annotations.BackpressureKind",
      "io.reactivex.Flowable",
      "io.reactivex.internal.queue.SpscLinkedArrayQueue",
      "io.reactivex.internal.functions.ObjectHelper",
      "io.reactivex.internal.subscriptions.BasicIntQueueSubscription",
      "io.reactivex.processors.UnicastProcessor$UnicastQueueSubscription",
      "io.reactivex.internal.util.ExceptionHelper$Termination",
      "io.reactivex.internal.util.ExceptionHelper",
      "io.reactivex.internal.schedulers.SchedulerWhen$ScheduledAction",
      "io.reactivex.internal.schedulers.SchedulerWhen$DelayedAction",
      "io.reactivex.observers.TestObserver$EmptyObserver",
      "io.reactivex.internal.util.VolatileSizeArrayList",
      "io.reactivex.plugins.RxJavaPlugins",
      "io.reactivex.internal.schedulers.SchedulerWhen$ImmediateAction",
      "io.reactivex.internal.disposables.DisposableHelper",
      "io.reactivex.internal.disposables.SequentialDisposable",
      "io.reactivex.internal.observers.EmptyCompletableObserver",
      "io.reactivex.internal.functions.Functions",
      "io.reactivex.disposables.ReferenceDisposable",
      "io.reactivex.disposables.RunnableDisposable",
      "io.reactivex.internal.operators.completable.CompletableCreate$Emitter",
      "io.reactivex.internal.schedulers.RxThreadFactory",
      "io.reactivex.internal.schedulers.SingleScheduler",
      "io.reactivex.internal.schedulers.SchedulerPoolFactory",
      "io.reactivex.schedulers.Schedulers$SingleHolder",
      "io.reactivex.internal.schedulers.ComputationScheduler",
      "io.reactivex.schedulers.Schedulers$ComputationHolder",
      "io.reactivex.internal.schedulers.IoScheduler",
      "io.reactivex.schedulers.Schedulers$IoHolder",
      "io.reactivex.internal.schedulers.TrampolineScheduler",
      "io.reactivex.internal.schedulers.NewThreadScheduler",
      "io.reactivex.schedulers.Schedulers$NewThreadHolder",
      "io.reactivex.schedulers.Schedulers",
      "io.reactivex.internal.operators.completable.CompletableTimer$TimerDisposable",
      "io.reactivex.internal.schedulers.AbstractDirectTask",
      "io.reactivex.internal.schedulers.ScheduledDirectTask",
      "io.reactivex.subscribers.SerializedSubscriber",
      "io.reactivex.internal.subscriptions.EmptySubscription",
      "io.reactivex.internal.subscriptions.SubscriptionHelper",
      "io.reactivex.exceptions.OnErrorNotImplementedException",
      "io.reactivex.internal.operators.completable.CompletableNever",
      "io.reactivex.internal.operators.completable.CompletableEmpty",
      "io.reactivex.internal.subscriptions.SubscriptionArbiter",
      "io.reactivex.internal.operators.flowable.FlowableRetryBiPredicate$RetryBiSubscriber",
      "io.reactivex.exceptions.UndeliverableException"
    );
  }
}
